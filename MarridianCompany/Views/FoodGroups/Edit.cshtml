@using MarridianCompany.Helpers;
@model MarridianCompany.Models.FoodGroup

@using (Ajax.BeginForm("Edit", "FoodGroups", null, new AjaxOptions { HttpMethod = "POST", OnSuccess = "", OnFailure = "" }, new { enctype = "multipart/form-data" }))
{
@Html.AntiForgeryToken()

                <div class="modal-header">
                    <h5 class="modal-title" id="editFoodGroupModalLabel">Edit FoodGroup</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                                <div class="modal-body">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    @Html.HiddenFor(model => model.ID)
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "col-form-label" })
                                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                    </div>
                                    <hr />
                                    @for (int i = 0; i < Model.FoodDetails.Count; i++)
                                    {
                                        var data_tag = "FoodDetails_" + @i + "__Image";

                    <div class="form-group">
                        @Html.HiddenFor(model => model.FoodDetails[i].ID)
                        @Html.HiddenFor(model => model.FoodDetails[i].FoodGroupID)
                        @Html.LabelFor(model => model.FoodDetails[i].Name, htmlAttributes: new { @class = "col-form-label" })
                        @Html.EditorFor(model => model.FoodDetails[i].Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FoodDetails[i].Name, "", new { @class = "text-danger" })
                    </div>
                                        <br />
                                                            <div class="form-group">
                                                                @Html.LabelFor(model => model.FoodDetails[i].Description, htmlAttributes: new { @class = "col-form-label" })
                                                                @Html.TextAreaFor(model => model.FoodDetails[i].Description, htmlAttributes: new { @class = "form-control" })
                                                                @Html.ValidationMessageFor(model => model.FoodDetails[i].Description, "", new { @class = "text-danger" })
                                                            </div>
                                                                                <br />
                                                                                                    <div class="form-group">
                                                                                                        @Html.LabelFor(model => model.FoodDetails[i].Image, htmlAttributes: new { @class = "col-form-label" })
                                                                                                        <br />
                                                                                                        @Html.ImageFor(model => model.FoodDetails[i].Image, "", 200, 200)
                                                                                                        <input id="file" name="file" type="file" data-tag="@data_tag" onchange="changeImage(this, event)" />
                                                                                                        @Html.ValidationMessageFor(model => model.FoodDetails[i].Image, "", new { @class = "text-danger" })
                                                                                                        @Html.HiddenFor(model => model.FoodDetails[i].Image)
                                                                                                    </div>
                                                                                                                        <br />
                                                                                                                                            <div class="form-group">
                                                                                                                                                @Html.LabelFor(model => model.FoodDetails[i].EntryDate, htmlAttributes: new { @class = "col-form-label" })
                                                                                                                                                @Html.EditorFor(model => model.FoodDetails[i].EntryDate, new { htmlAttributes = new { @class = "form-control" } })
                                                                                                                                                @Html.ValidationMessageFor(model => model.FoodDetails[i].EntryDate, "", new { @class = "text-danger" })
                                                                                                                                            </div>
                                                                                                                                                                <br />
                                                                                                                                                                                    <div class="form-group">
                                                                                                                                                                                        @Html.LabelFor(model => model.FoodDetails[i].Quantity, htmlAttributes: new { @class = "col-form-label" })
                                                                                                                                                                                        @Html.EditorFor(model => model.FoodDetails[i].Quantity, new { htmlAttributes = new { @class = "form-control" } })
                                                                                                                                                                                        @Html.ValidationMessageFor(model => model.FoodDetails[i].Quantity, "", new { @class = "text-danger" })
                                                                                                                                                                                    </div>}
                                </div>
                                                <div class="modal-footer">
                                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                                    <input type="submit" class="btn btn-primary" value="Save" />
                                                </div>}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


}

