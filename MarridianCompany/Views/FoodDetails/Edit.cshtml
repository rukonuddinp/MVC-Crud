
@using MarridianCompany.Helpers
@model MarridianCompany.Models.FoodDetail


@using (Ajax.BeginForm( "Edit",  "FoodDetails", null,  new AjaxOptions() { HttpMethod = "POST", OnSuccess = "", OnFailure = "" }, new { enctype = "multipart/form-data" }))
{
@Html.AntiForgeryToken()

                <div class="modal-header">
                    <h5 class="modal-title" id="editFoodDetailModalLabel">Edit MarridianCompany</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                                <div class="modal-body">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    @Html.HiddenFor(model => model.ID)
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "col-form-label" })
                                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "col-form-label" })
                                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "col-form-label" })
                                        <br />
                                        @Html.ImageFor(model => model.Image, "Edit Image", 200, 200)
                                        <input id="file" name="file" type="file" onchange="editImage(event)" />
                                        @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                                        @Html.HiddenFor(model => model.Image)
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.EntryDate, htmlAttributes: new { @class = "col-form-label" })
                                        @Html.EditorFor(model => model.EntryDate, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.EntryDate, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "col-form-label" })
                                        @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.FoodGroupID, "FoodGroupID", htmlAttributes: new { @class = "col-form-label" })
                                        @Html.DropDownList("FoodGroupID", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.FoodGroupID, "", new { @class = "text-danger" })
                                    </div>

                                </div>
                                                <div class="modal-footer">
                                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                                    <input type="submit" class="btn btn-primary" value="Save" />
                                                </div>}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}